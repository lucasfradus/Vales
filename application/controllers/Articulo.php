<?php
ini_set('max_execution_time', 0);
ini_set('memory_limit','2048M');
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Articulo extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Articulo_model');
        $this->load->helper('date');
        $this->load->library('form_validation');
        $this->load->model('Fk_un_med_model');
        $this->load->model('Fk_categoria_model');
        $this->load->model('Fk_categorias_lm_model');

        $this->data = $this->generales->imports_generales();

        //aca valido que solo ciertos perfiles de usuarios puedan utilizar los metodos de estre controlador

        if(!$this->ion_auth->in_group($this->config->item('Administrator'))){
          $this->session->set_flashdata('error','No tiene permiso para realizar esta acción1.11111');
                 redirect('/');

        }
    }

    function bulk_add(){
        $this->data['_view'] = 'articulo/bulk_add';
        $this->load->view('layouts/main',$this->data);
    }

/*

Esta funcion maneja los update de manera mas dinamica. recibo los valores y los campos via ajax, me ahorro la pantalla de edicion.

*/
    public function dynamic_update(){
      $name = $this->input->post('name');
      $value = $this->input->post('value');
      $pk = $this->input->post('pk');
      /*
      Primero validamos si lo que estan cambiando es el numero de articulo y que no este cargado.
      */
      if($name == 'num_articulo'){
          if($this->Articulo_model->get_articulo_by_number($value)){
              $response = array(
                  'success' => false,
                  'msg' => 'ese numero ya existe',
              );
          }else if(empty($value)){
              $response = array(
                  'success' => false,
                  'msg' => 'El número de Articulo no pude estar vacio.',
              );
          }else{
              $response = $this->Articulo_model->dynamic_update($name,$value,$pk);
          }
          /*
          Segundo, valido el campo de descrp1 que no esta vacio.
          */
      }else if($name == 'descripcion1'){
          if(empty($value)){
              $response = array(
                  'success' => false,
                  'msg' => 'La descripcion Primaria no puede estar Vacia.',
              );
          }else{
              $response = $this->Articulo_model->dynamic_update($name,$value,$pk);
          }

      }

      echo json_encode($response);
    }

    function import(){
      $this->load->library('CSVReader');
      $csvData = $this->csvreader->parse_file(site_url('art.csv'));
      $i = 0;
      foreach ($csvData as $row) {
           $id_un_med_1 = $this->Fk_un_med_model->get_fk_un_med_by_name($row['id_un_med_1']);
           $id_un_med_2 = $this->Fk_un_med_model->get_fk_un_med_by_name($row['id_un_med_2']);
           $id_cat_lm  = $this->Fk_categorias_lm_model->get_fk_cat_by_name($row['cat_lm']);
            //Antes de hacer la carga tengo que chequear que no exista ese numero de articulo y que esten bien las unidades de medida. si no, no lo cargo
          //if (!$this->Articulo_model->get_articulo_by_number($row['num_articulo'])&&$id_un_med_1){
              if (!$this->Articulo_model->get_articulo_by_number($row['num_articulo'])&&$id_un_med_1&&$id_un_med_2&&$id_cat_lm){
              $i++;
              $params = array(
                  'id_un_med1' =>  $id_un_med_1,
                  'id_un_med2' =>  $id_un_med_2,
                  'num_articulo' => $row['num_articulo'],
                  'codigo_jde' => 000000000,
                  'fk_codigo_lm' =>$id_cat_lm,
                  'fk_codigo_familia' => $this->Fk_categoria_model->get_fk_cat_by_name(array('codigo_categoria' => 'Familia', 'nombre_categoria' => $row['family'])),
                  'fk_codigo_cat1' => $this->Fk_categoria_model->get_fk_cat_by_name(array('codigo_categoria' => 'Cod1', 'nombre_categoria' => $row['cod_1'])),
                  'fk_codigo_cat2' => $this->Fk_categoria_model->get_fk_cat_by_name(array('codigo_categoria' => 'Cod2', 'nombre_categoria' => $row['cod_2'])),
                  'fk_codigo_cat3' => $this->Fk_categoria_model->get_fk_cat_by_name(array('codigo_categoria' => 'Cod3', 'nombre_categoria' => $row['cod_3'])),
                  'descripcion1' => $row['descripcion1'],
                  'descripcion2' => $row['descripcion2'],
                  'texto_busqueda' => $row['texto_busqueda'],
                  'tipo_linea' =>  $row['tipo_linea'],
                  'tipo_almacenamiento' => $row['tipo_almacenamiento'],
                  'pto_venta' => $row['pto_venta'],
                  'status' => 1,
              );
              $articulo_id = $this->Articulo_model->add_articulo($params);
               echo "<br>articulo agregado correctamente  id: ". $articulo_id;
          }
          else
          {
             echo "<br>ha ocurrido un error al intentar cargar el articulo ".$row['num_articulo'].". Esto se puede deber a que ya este cargado o que su unidad de medida no se encuentre cargada.";
         }

     }
     echo "total de items agregados: ".$i;

    }

    /*
     * Listing of articulos
     */
    function index()
    {
//paginacion
       $params['limit'] = 10;
       $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
       $config = $this->config->item('pagination');
       $config['per_page'] = 10;
       $config['base_url'] = site_url('articulo/index?');
       $config['total_rows'] = $this->Articulo_model->get_all_articulos_count();
       $this->pagination->initialize($config);
       $this->data['links'] = $this->pagination->create_links();
       $this->data['articulos'] = $this->Articulo_model->get_all_articulos($params);

        $this->data['_view'] = 'articulo/index';
        $this->load->view('layouts/main',$this->data);

    }

    /*
     * Esta funcion la llamo con un select2 para traer los articulos y asi no tener que cargar todos cada vez que quiero crear un vale nuevo
     */

    function autocompete(){
     echo json_encode($this->Articulo_model->get_autocomplete($this->input->get('search'), $this->input->get('number'), $this->input->get('category')));
 }
     function autocompete_articles(){
      echo json_encode($this->Articulo_model->get_autocomplete_articles($this->input->get('search')));
    }



function test(){

    if (strcmp('no-email@ilva.com.ar', $this->config->item('Defaultemail')) !== 0) {
        echo '$var1 no es igual a $var2 en una comparación que considera mayúsculas y minúsculas';
    } else{
        echo 'son iguales';
    }


 }


    /*
     * Adding a new articulo
     */

    function add(){

    // if($this->ion_auth->RolCheck($this->config->item('AltaArticulos'))){

        $this->form_validation->set_rules('num_articulo','Numero de Articulo','required|integer|is_unique[articulos.num_articulo]');
        $this->form_validation->set_rules('descripcion1','Descripcion1','required');
        $this->form_validation->set_rules('id_un_med1','Id Un Med1','required|integer');


        if($this->form_validation->run())
        {
            $params = array(
                'id_un_med1'          => $this->input->post('id_un_med1'),
                'id_un_med2'          => $this->input->post('id_un_med2'),
                'num_articulo'        => $this->input->post('num_articulo'),
                'descripcion1'        => $this->input->post('descripcion1'),
                'descripcion2'        => $this->input->post('descripcion2'),
                'texto_busqueda'      => $this->input->post('texto_busqueda'),
                'fk_codigo_familia'   => $this->input->post('fk_codigo_familia'),
                'fk_codigo_cat1'      => $this->input->post('fk_codigo_cat1'),
                'fk_codigo_cat2'      => $this->input->post('fk_codigo_cat2'),
                'fk_codigo_cat3'      => $this->input->post('fk_codigo_cat3'),
                'tipo_linea'          => $this->input->post('tipo_linea'),
                'tipo_almacenamiento' => $this->input->post('tipo_almacenamiento'),
                'pto_venta'           => $this->input->post('pto_venta'),
                'status' => $this->config->item('Activo'),
            );

            $articulo_id = $this->Articulo_model->add_articulo($params);
            $this->session->set_flashdata('success','Articulo Creado Correctamente ID:'.$articulo_id);
            redirect('articulo/index');
        }
        else
        {
            $this->load->model('Fk_un_med_model');
            $this->data['all_fk_un_med'] = $this->Fk_un_med_model->get_all_fk_un_med();

            $this->load->model('Fk_categoria_model');
            $this->data['categoy_family'] = $this->Fk_categoria_model->get_all_fk_categorias_codigo($this->config->item('category_family'));
            $this->data['categoy_cod1'] =   $this->Fk_categoria_model->get_all_fk_categorias_codigo($this->config->item('category_cod1'));
            $this->data['categoy_cod2'] =   $this->Fk_categoria_model->get_all_fk_categorias_codigo($this->config->item('category_cod2'));
            $this->data['categoy_cod3'] =   $this->Fk_categoria_model->get_all_fk_categorias_codigo($this->config->item('category_cod3'));
            $this->data['_view'] = 'articulo/add';
            $this->load->view('layouts/main',$this->data);
        }
    // }
}
     /*
     * Ver el detalle de un articulo
     */

    function view($id_articulo){
        // if($this->ion_auth->RolCheck($this->config->item('VerArticulos'))){
            $this->data['articulo'] = $this->Articulo_model->get_articulo($id_articulo);
              if(isset($this->data['articulo']['id_articulo'])){

                $this->data['_view'] = 'articulo/view';
                $this->load->view('layouts/main',$this->data);

              }else{
                show_error('El articulo que esta intentado ver no existe.');
              }
        // }
    }


    /*
     * Editing a articulo
     */
     function edit($id_articulo){
        //if($this->ion_auth->RolCheck($this->config->item('EditarArticulos'))){
        // check if the articulo exists before trying to edit it
        $this->data['articulo'] = $this->Articulo_model->get_articulo($id_articulo);

        if(isset($this->data['articulo']['id_articulo']))
        {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('num_articulo','Num Articulo','required');
            $this->form_validation->set_rules('descripcion1','Descripcion1','required');
            $this->form_validation->set_rules('id_un_med1','Id Un Med1','required|integer');

            if($this->form_validation->run())
            {
                $params = array(
                    'id_un_med1'          => $this->input->post('id_un_med1'),
                    'id_un_med2'          => $this->input->post('id_un_med2'),
                    'num_articulo'        => $this->input->post('num_articulo'),
                    'descripcion1'        => $this->input->post('descripcion1'),
                    'descripcion2'        => $this->input->post('descripcion2'),
                    'texto_busqueda'      => $this->input->post('texto_busqueda'),
                    'fk_codigo_familia'   => $this->input->post('fk_codigo_familia'),
                    'fk_codigo_cat1'      => $this->input->post('fk_codigo_cat1'),
                    'fk_codigo_cat2'      => $this->input->post('fk_codigo_cat2'),
                    'fk_codigo_cat3'      => $this->input->post('fk_codigo_cat3'),
                    'tipo_linea'          => $this->input->post('tipo_linea'),
                    'tipo_almacenamiento' => $this->input->post('tipo_almacenamiento'),
                    'pto_venta'           => $this->input->post('pto_venta'),
                    'status' => $this->input->post('status'),
                );

                $this->Articulo_model->update_articulo($id_articulo,$params);
                $this->session->set_flashdata('success','Se ha editado correctamente el articulo'.$articulo_id);
                redirect('articulo/index');
            }
            else{

                $this->load->model('Fk_un_med_model');
                $this->data['all_fk_un_med'] = $this->Fk_un_med_model->get_all_fk_un_med();

                $this->data['_view'] = 'articulo/edit';
                $this->load->view('layouts/main',$this->data);

            }
        }
        else
            show_error('El articulo que esta intentado editar no existe.');
    //}
}

    /*
     * Deleting articulo
     */
    function remove($id_articulo)
    {
        $articulo = $this->Articulo_model->get_articulo($id_articulo);
        // check if the articulo exists before trying to delete it
        if(isset($articulo['id_articulo']))
        {
          if($articulo['status']==$this->config->item('Activo')){
            $this->Articulo_model->update_articulo($id_articulo,array('status' => $this->config->item('Inactivo')));
            $this->session->set_flashdata('success','Se ha deshabilito correctamente el articulo '.$id_articulo);
          }else{
            $this->Articulo_model->update_articulo($id_articulo,array('status' => $this->config->item('Activo')));
            $this->session->set_flashdata('success','Se ha habilito correctamente el articulo '.$id_articulo);
          }
            redirect('articulo/index');
        }
        else
            show_error('El articulo que esta intentado eliminar no existe.');
    }

}
