<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Articulo extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Articulo_model');
        $this->load->helper('date');
        $this->load->library('form_validation');


        $this->data = $this->generales->imports_generales();
    }

    /*
     * Listing of articulos
     */
    function index()
    {
        if($this->ion_auth->RolCheck($this->config->item('VerArticulos'))){
//paginacion
        $params['limit'] = 10;
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        $config = $this->config->item('pagination');
        $config['per_page'] = 10;
        $config['base_url'] = site_url('articulo/index?');
        $config['total_rows'] = $this->Articulo_model->get_all_articulos_count();
        $this->pagination->initialize($config);

        $this->data['articulos'] = $this->Articulo_model->get_all_articulos($params);

        $this->data['_view'] = 'articulo/index';
        $this->load->view('layouts/main',$this->data);

        }
    }

    function autocompete(){
     $search_data = $this->input->post('search_data');
     $result = $this->Articulo_model->get_autocomplete($search_data);
      if (!empty($result)){

          foreach ($result as $row):

            $html  = "<li class=\"list-group-item\"><a href=";
            $html .= site_url('articulo/view/'.$row->id_articulo);
            $html .= ">".$row->num_articulo.' | '.$row->descripcion1."</a></li>";
            echo  $html;
          endforeach;
     }
      else{

        $html = '<li class=\"list-group-item\">';
        $html .= 'Articulo No encontrado';
        $html .= "</li>";
        echo  $html;
     }
 }


    /*
     * Adding a new articulo
     */

    function add(){

    if($this->ion_auth->RolCheck($this->config->item('AltaArticulos'))){

        $this->form_validation->set_rules('num_articulo','Numero de Articulo','required|integer|is_unique[articulos.num_articulo]');
        $this->form_validation->set_rules('descripcion1','Descripcion1','required');
        $this->form_validation->set_rules('id_un_med1','Id Un Med1','required|integer');

        if($this->form_validation->run())
        {
            $params = array(
                'id_un_med1' => $this->input->post('id_un_med1'),
                'id_un_med2' => $this->input->post('id_un_med2'),
                'num_articulo' => $this->input->post('num_articulo'),
                'descripcion1' => $this->input->post('descripcion1'),
                'descripcion2' => $this->input->post('descripcion2'),
                'status' => $this->input->post('status'),
            );

            $articulo_id = $this->Articulo_model->add_articulo($params);
            $this->session->set_flashdata('success','Articulo Creado Correctamente ID:'.$articulo_id);
            redirect('articulo/index');
        }
        else
        {
            $this->load->model('Fk_un_med_model');
            $this->data['all_fk_un_med'] = $this->Fk_un_med_model->get_all_fk_un_med();

            $this->data['_view'] = 'articulo/add';
            $this->load->view('layouts/main',$this->data);
        }
    }
}
     /*
     * Ver el detalle de un articulo
     */

    function view($id_articulo){
        if($this->ion_auth->RolCheck($this->config->item('VerArticulos'))){
            $this->data['articulo'] = $this->Articulo_model->get_articulo($id_articulo);
              if(isset($this->data['articulo']['id_articulo'])){

                $this->data['_view'] = 'articulo/view';
                $this->load->view('layouts/main',$this->data);

              }else{
                show_error('El articulo que esta intentado ver no existe.');
              }
        }
    }


    /*
     * Editing a articulo
     */
     function edit($id_articulo){
        if($this->ion_auth->RolCheck($this->config->item('EditarArticulos'))){
        // check if the articulo exists before trying to edit it
        $this->data['articulo'] = $this->Articulo_model->get_articulo($id_articulo);

        if(isset($this->data['articulo']['id_articulo']))
        {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('num_articulo','Num Articulo','required');
            $this->form_validation->set_rules('descripcion1','Descripcion1','required');
            $this->form_validation->set_rules('id_un_med1','Id Un Med1','required|integer');

            if($this->form_validation->run())
            {
                $params = array(
                    'id_un_med1' => $this->input->post('id_un_med1'),
                    'id_un_med2' => $this->input->post('id_un_med2'),
                    'num_articulo' => $this->input->post('num_articulo'),
                    'descripcion1' => $this->input->post('descripcion1'),
                    'descripcion2' => $this->input->post('descripcion2'),
                    'status' => $this->input->post('status'),
                );

                $this->Articulo_model->update_articulo($id_articulo,$params);
                $this->session->set_flashdata('success','Se ha editado correctamente el articulo'.$articulo_id);
                redirect('articulo/index');
            }
            else{

                $this->load->model('Fk_un_med_model');
                $this->data['all_fk_un_med'] = $this->Fk_un_med_model->get_all_fk_un_med();

                $this->data['_view'] = 'articulo/edit';
                $this->load->view('layouts/main',$this->data);

            }
        }
        else
            show_error('El articulo que esta intentado editar no existe.');
    }
}

    /*
     * Deleting articulo
     */
    function remove($id_articulo)
    {
        $articulo = $this->Articulo_model->get_articulo($id_articulo);
        // check if the articulo exists before trying to delete it
        if(isset($articulo['id_articulo']))
        {
          if($articulo['status']==$this->config->item('Activo')){
            $this->Articulo_model->update_articulo($id_articulo,array('status' => $this->config->item('Inactivo')));
            $this->session->set_flashdata('success','Se ha deshabilito correctamente el articulo '.$id_articulo);
          }else{
            $this->Articulo_model->update_articulo($id_articulo,array('status' => $this->config->item('Activo')));
            $this->session->set_flashdata('success','Se ha habilito correctamente el articulo '.$id_articulo);
          }
            redirect('articulo/index');
        }
        else
            show_error('El articulo que esta intentado eliminar no existe.');
    }

}
