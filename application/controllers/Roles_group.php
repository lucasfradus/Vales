<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Roles_group extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Roles_group_model');
        $this->load->library('ion_auth');
        $this->load->library('session');
        $this->load->model('Vales_consumo_model');
        $this->load->model('Role_model');
        $this->load->model('User_model');

         $this->user = $this->ion_auth->user()->row();
         $this->data = $this->generales->imports_generales();
         //Perfiles habilitados para ver esta pagina
         $group = array($this->config->item('Administrator'), $this->config->item('Pañolero'));

           if(!$this->ion_auth->in_group($group) || !$this->ion_auth->RolCheck($this->config->item('AdministrarRolesPorUsuario'))){
             $this->session->set_flashdata('error', 'No Tiene permisos para realizar esta acción');
                     redirect('/');
           }



    }

    /*
     * Listing of roles_group
     */
    function index()
    {
        $this->data['get_all_roles_group'] = $this->Role_model->get_all_roles();
        $this->data['all_users'] = $this->User_model->get_all_users();
        $this->data['_view'] = 'roles_group/index';
        $this->load->view('layouts/main',$this->data);
    }

    function get_roles(){
      echo json_encode($this->Roles_group_model->get_roles($this->input->POST('id_user'), $this->input->POST('id_role')));
    }
    /*
     * Adding a new roles_group
     */
    function add()
    {
        if(isset($_POST) && count($_POST) > 0)
        {
            $params = array(
				'user_id' => $this->input->post('user_id'),
				'role_id' => $this->input->post('rol_id'),
            );

            $roles_group_id = $this->Roles_group_model->add_roles_group($params);
            redirect('roles_group/index');
        }
        else
        {
			$this->load->model('User_model');
			$this->data['all_users'] = $this->User_model->get_all_users();

			$this->load->model('Role_model');
			$this->data['all_roles'] = $this->Role_model->get_all_roles();

            $this->data['_view'] = 'roles_group/add';
            $this->load->view('layouts/main',$this->data);
        }
    }

    /*
     * Editing a roles_group
     */
    function edit($id)
    {
        // check if the roles_group exists before trying to edit it
        $data['roles_group'] = $this->Roles_group_model->get_roles_group($id);

        if(isset($data['roles_group']['']))
        {
            if(isset($_POST) && count($_POST) > 0)
            {
                $params = array(
					'user_id' => $this->input->post('user_id'),
					'rol_id' => $this->input->post('rol_id'),
                );

                $this->Roles_group_model->update_roles_group($id,$params);
                redirect('roles_group/index');
            }
            else
            {
				$this->load->model('User_model');
				$this->data['all_users'] = $this->User_model->get_all_users();

				$this->load->model('Role_model');
				$this->data['all_roles'] = $this->Role_model->get_all_roles();

                $this->data['_view'] = 'roles_group/edit';
                $this->load->view('layouts/main',$this->data);
            }
        }
        else
            show_error('The roles_group you are trying to edit does not exist.');
    }

    function test(){
        $roles_group = $this->Roles_group_model->get_roles_group(43);
        echo json_encode($roles_group);
    }

    /*
     * Deleting roles_group
     */
    function remove()
    {

        $roles_group = $this->Roles_group_model->get_roles_group($this->input->POST('rol_id'));
    //    check if the roles_group exists before trying to delete it
        if(isset($roles_group['id_rol_']))
        {
            $this->Roles_group_model->delete_roles_group($roles_group['id_rol_']);
            echo $roles_group['id_rol_'];
        }
        else
            echo 'false';
     }

}
