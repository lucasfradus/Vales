<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Notificaciones_user extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Notificaciones_user_model');

        $this->user = $this->ion_auth->user()->row();
        $this->data = $this->generales->imports_generales();

//Esta pagina solo la deberian poder ver los administradores o los pañoleros.

        $group= array(
            $this->config->item('Administrator'),
            $this->config->item('Pañolero')
        );

    }

    /*
     * Listing of notificaciones_users
     * Si recibo el parametro id user, entonces solo muestro las notificaciones para dicho user
     */
    function index($id_user = null)
    {
        if (!$this->ion_auth->in_group($group))
        {
            $this->session->set_flashdata('error', 'No Tiene permiso para realizar esa acción.');
            redirect('/');
        }

        $this->data['notificaciones_users'] = $this->Notificaciones_user_model->get_all_notificaciones_users();
        $this->data['_view'] = 'notificaciones_user/index';
        $this->load->view('layouts/main',$this->data);
    }

    /*
     * Adding a new notificaciones_user
     */
     function add()
         {
            if (!$this->ion_auth->in_group($group))
            {
                $this->session->set_flashdata('error', 'No Tiene permiso para realizar esa acción.');
                redirect('/');
            }
             $this->load->library('form_validation');

     		$this->form_validation->set_rules('user_id','Usuario','required|is_unique[notificaciones_users.user_id]');

     		if($this->form_validation->run())
             {
                 $params = array(
             				'vale_nuevo' => $this->input->post('vale_nuevo'),
             				'vale_aprobado' => $this->input->post('vale_aprobado'),
             				'vale_listo' => $this->input->post('vale_listo'),
             				'vale_retirado' => $this->input->post('vale_retirado'),
             				'user_id' => $this->input->post('user_id'),
                 );

                 $notificaciones_user_id = $this->Notificaciones_user_model->add_notificaciones_user($params);
                 redirect('notificaciones_user/index');
             }
             else
             {
     			$this->load->model('User_model');
     			$this->data['all_users'] = $this->User_model->get_all_users();

                 $this->data['_view'] = 'notificaciones_user/add';
                 $this->load->view('layouts/main',$this->data);
             }
         }

    /*
     * Editing a notificaciones_user
     */
    function edit($id_notificaciones_users)
    {
        if (!$this->ion_auth->in_group($group))
        {
            $this->session->set_flashdata('error', 'No Tiene permiso para realizar esa acción.');
            redirect('/');
        }
        // check if the notificaciones_user exists before trying to edit it
        $this->data['notificaciones_user'] = $this->Notificaciones_user_model->get_notificaciones_user($id_notificaciones_users);

        if(isset($this->data['notificaciones_user']['id_notificaciones_users']))
        {
            $this->load->library('form_validation');

			//$this->form_validation->set_rules('user_id','User Id','is_unique[users.id]');

			if($this->form_validation->run())
            {
                $params = array(
					'vale_nuevo' => $this->input->post('vale_nuevo'),
					'vale_aprobado' => $this->input->post('vale_aprobado'),
					'vale_listo' => $this->input->post('vale_listo'),
					'vale_retirado' => $this->input->post('vale_retirado'),
					'user_id' => $this->input->post('user_id'),
                );

                $this->Notificaciones_user_model->update_notificaciones_user($id_notificaciones_users,$params);
                redirect('notificaciones_user/index');
            }
            else
            {
				$this->load->model('User_model');
				$this->data['all_users'] = $this->User_model->get_all_users();

                $this->data['_view'] = 'notificaciones_user/edit';
                $this->load->view('layouts/main',$this->data);
            }
        }
        else
            show_error('The notificaciones_user you are trying to edit does not exist.');
    }


    public function update_by_user($id_notificaciones_users, $field, $next = null){
        $this->data['notificaciones_user'] = $this->Notificaciones_user_model->get_notificaciones_user($id_notificaciones_users);
            if(isset($this->data['notificaciones_user']['id_notificaciones_users']))
            {
                $status = $this->data['notificaciones_user'][$field];
                if($status == 1){
                    $params = array(
    					$field => 0,
                    );
                }else{
                    $params = array(
    					$field => 1,
                    );
                }
                $this->Notificaciones_user_model->update_notificaciones_user($id_notificaciones_users,$params);
                $this->session->set_flashdata('success', 'Notificaciones actualizadas correctamente');
                if(isset($next)){
                    redirect($next);
                }else{
                    redirect('auth/edit_user/'.$this->data['notificaciones_user']['user_id']);
                }

            }else {
                  $this->session->set_flashdata('error', 'Ha ocurrido un error');
                redirect('/');
            }

        //var_dump($id_notificaciones_users, $field);
    }




}
