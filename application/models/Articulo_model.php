<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Articulo_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }

    /*
     * Get articulo by id_articulo
     */
    function get_articulo($id_articulo)
    {
        $this->db->select('id_articulo,num_articulo,descripcion1,descripcion2,status');
       $this->db->select('u1.un_medida AS UN_Medida_1');
       $this->db->select('u2.un_medida AS UN_Medida_2');
       $this->db->join('fk_un_med u1', 'u1.id_un_medida = articulos.id_un_med1');
       $this->db->join('fk_un_med u2', 'u2.id_un_medida = articulos.id_un_med2');
        return $this->db->get_where('articulos',array('id_articulo'=>$id_articulo))->row_array();
    }

    function get_un_medida($id_articulo)
    {
        $array = array(
            'id_articulo'=>$id_articulo,
        );
            $this->db->select('un_medida');
            $this->db->join('fk_un_med', 'id_un_medida = articulos.id_un_med1');
            $this->db->where($array);
         return $this->db->get('articulos')->result();

        //return  $this->db->last_query();
    }



 function delete_tmp($params){
         $this->db->delete('articulos_x_vale',$params);
         return $this->db->last_query();
    }



    /*
     * Get articulo x vale by id_articulo
     */
    function get_articulo_por_vale($vales_consumo_id, $status = null)
    {
        if(isset($status)){
            $this->db->where('estado_entrega_item', $status);

        }
       $this->db->join('articulos', 'id_articulo_por_vale = articulos.id_articulo');
        $this->db->where('id_vale_articulos', $vales_consumo_id);

        return $this->db->get('articulos_x_vale')->result();
    }








       /*
     * function to add new articulo x vale
     */
    function add_articulo_por_vale($params)
    {
        $this->db->select('cantidad');
        $this->db->where('id_vale_articulos', $params['id_vale_articulos']);
        $this->db->where('id_articulo_por_vale', $params['id_articulo_por_vale']);

        $result = $this->db->get('articulos_x_vale')->result();

            if($result){
                //si entro acÃ¡ quiere decir que ya se ha cargado ese articulo en este vale, en lugar de cargarlo nuevamente, lo actualizo

                foreach($result as $r){
                $cantidad = $r->cantidad;
            }
                $this->db->where('id_vale_articulos', $params['id_vale_articulos']);
                 $this->db->where('id_articulo_por_vale', $params['id_articulo_por_vale']);

                 $params['cantidad'] += $cantidad;
                return $this->db->update('articulos_x_vale',$params);


            }else{
                //si entro aca, el articulo aun no existe en este vale, por lo tanto lo cargo
                return  $this->db->insert('articulos_x_vale',$params);
            }

    }


    public function get_autocomplete($search_data)
{
    $this->db->like('descripcion1', $search_data);
    $this->db->or_like('descripcion2', $search_data);
    $this->db->or_like('num_articulo', $search_data);
    return $this->db->get('articulos', 8)->result();
}

public function get_autocomplete_uno($search_data)
{
    $this->db->like('descripcion1', $search_data);
    $this->db->or_like('descripcion2', $search_data);
    $this->db->or_like('num_articulo', $search_data);
    return $this->db->get('articulos', 1)->result();
}


      /*
     * Get all articulos count
     */
    function get_all_articulos_count()
    {
        $this->db->from('articulos');
        return $this->db->count_all_results();
    }

    /*
     * Get all articulos
     */
       function get_all_articulos($params = array())
    {
       $this->db->select('id_articulo,num_articulo,descripcion1,descripcion2,status');
       $this->db->select('u1.un_medida AS UN_Medida_1');
       $this->db->select('u2.un_medida AS UN_Medida_2');
       $this->db->join('fk_un_med u1', 'u1.id_un_medida = articulos.id_un_med1');
       $this->db->join('fk_un_med u2', 'u2.id_un_medida = articulos.id_un_med2');
        $this->db->order_by('id_articulo', 'asc');
        if(isset($params) && !empty($params))
        {
            $this->db->limit($params['limit'], $params['offset']);
        }
        return $this->db->get('articulos')->result_array();
    }

    /*
     * function to add new articulo
     */
    function add_articulo($params)
    {
        $this->db->insert('articulos',$params);
        return $this->db->insert_id();
    }


    /*
     * function to update articulo
     */
    function update_articulo($id_articulo,$params)
    {
        $this->db->where('id_articulo',$id_articulo);
        return $this->db->update('articulos',$params);
    }


    /*
     * function to update articulo x vale
     */
    function update_articulo_por_vale($params,$status)
    {
        $where = array(
           'id_vale_articulos'              => $params['id_vale'],
           'id_articulo_por_vale' => $params['id_articulo_por_vale'],
        );
        $update = array(
            'cantidad_entregada' => $params['cantidad_entregado'],
            'estado_entrega_item' => $status,
        );

        $this->db->where($where);
        return $this->db->update('articulos_x_vale',$update);
    }


    /*
     * function to add new articulo x vale
     */
    function add_articulo_por_vale_entregado($params)
    {
        $this->db->insert('articulos_x_vale_entregado',$params);
        return $this->db->insert_id();

    }









    /*
     * function to delete articulo
     */
    function delete_articulo($id_articulo)
    {
        return $this->db->delete('articulos',array('id_articulo'=>$id_articulo));
    }
}
